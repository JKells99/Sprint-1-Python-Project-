# NL Chocolate Company Program
# Published By Jordan Kelloway And Cameron D'Amico
# Published On June 20th 2022

import datetime
import string
import FormatValues as FV


# Constants
CurDate = datetime.datetime.now()


OWN_CAR_RATE = 85.00
MILEAGE_RATE = 0.17
RENT_CAR_RATE = 65.00
HST_RATE = 0.15



# Functions

def BonusCalc(Bonus):                     # This Function Calculates the bonus value and returns it to the program
    if NumDays > 3:
        Bonus1 = 100
    else:
        Bonus1 = 0

    if TotalKms > 1000 and RentOwnVal == "O":
        Bonus2 = TotalKms * 0.04
    else:
        Bonus2 = 0

    if ClaimType == "E":
        Bonus3 = 45 * NumDays
    else:
        Bonus3 = 0

    if StartDate.month == 12 and StartDate.day >= 15 and StartDate.day <= 22:
        Bonus4 = 50 * NumDays
    else:
        Bonus4 = 0

    Bonus = Bonus1 + Bonus2 + Bonus3 + Bonus4
    return Bonus

def DateConverter(StartDate):
    DateDSP = StartDate.strftime("%B,%d %Y")
    return DateDSP
while True:
    print("NL Chocolate Company")
    print("Travel Claims Processing System")
    print()
    print("1.Enter an Employee Travel Claim.")
    print("2.Fun Interview Question.")
    print("3.Cool Stuff with Strings and Dates.")
    print("4.Graph Monthly Claim Totals.")
    print("5.Quit Program.")
    print()
    MenuChoice = int(input("Enter choice (1-5):"))

    #INPUTS
    if MenuChoice == 1:
        while True:        #Main Program Loop


            while True:                                                       # Loop For Employee Number
                EmpNumber = input("Enter The Employee Number: (ex 00000)")
                while not EmpNumber.isdigit():
                    print("Employee Number Cannont Contain Letters! Please Try Again!")
                    EmpNumber = input("Enter The Employee Number: (ex 00000)")
                if len(EmpNumber) < 5:
                    print("Employee Number Must Be Exactly 5 Numbers")
                elif len(EmpNumber) > 5:
                    print("Employee Number Must Be Exactly 5 Numbers")
                elif EmpNumber == "":
                    print("Employee Number Cannont Be Blank")
                else:
                    break


            while True:                                                           # Loop For First Name
                EmpFirstName = input("Enter Employee's First Name:").title()
                while not EmpFirstName.isalpha():
                    print("Employee Name Can Not Have A Number! Please Try Again")
                    EmpFirstName = input("Enter Employee's First Name:").title()
                else:
                    break


            while True:                                                             #Loop For Last Name
                EmpLastName = input("Enter Employee's Last Name:").title()
                while not EmpLastName.isalpha():
                    print("Employee Last Name Can Not Have A Number! Please Try Again")
                    EmpLastName = input("Enter Employee's First Name:").title()
                else:
                    break


            while True:                                                            #Loop For Location
                Location = input("Enter The Location Of The Trip:").title()
                while not Location.isalpha():
                    print("Location should not contain numbers")
                    Location = input("Enter The Location Of The Trip:")
                else:
                    break

            while True:                                                           #Loop For Start Date
                try:
                    StartDate = input("Enter The Start Date (yyyy-mm-dd):")
                    StartDate = datetime.datetime.strptime(StartDate, "%Y-%m-%d")
                    break
                except:
                    print("Invalid date format please try again (yyyy-mm-dd)")


            while True:                                                  # End Date Loop
                try:
                    EndDate = input("Enter The End Date (yyyy-mm-dd):")
                    EndDate = datetime.datetime.strptime(EndDate, "%Y-%m-%d")
                    if EndDate < StartDate:
                        print("Start Date Cannont Be After The End Date Try Again")
                    else:
                        break

                except:
                    print("Invalid date format please try again (yyyy-mm-dd)")


            while True:                                                # Loop For Number Of days
                NumDays = (EndDate - StartDate).days
                if NumDays > 7:
                    print("Error Input End Date Again. Days Stayed Can Not Exceed 7!")
                    EndDate = input("Enter The End Date (yyyy-mm-dd):")
                    EndDate = datetime.datetime.strptime(EndDate, "%Y-%m-%d")

                elif NumDays < 7:
                    break
                elif NumDays <1:
                    print("Error ")






            while True:                                             #Loop For Rent Or Own Validation
                RentOwnVal = input("Did the employee rent or own the vechicle? Enter (O) for Owned or (R) for Rented ").upper()
                if RentOwnVal == "O" or RentOwnVal == "R":
                    break

                else:
                    print("error")




            while True:                                               #Total Kms travelled loop/validation/decision
                if RentOwnVal == "O":
                    TotalKms = int(input("Enter The total Kilomenters travelled "))
                    if TotalKms > 2000:
                        print("error try again")
                    else:
                        break
                else:
                    TotalKms = 0
                    break

            while True:                                                        #Claim Type Validation Loop
                ClaimType = input("enter the claim type (S or E)  (S)-Standard or (E)-Executive: ").upper()
                if ClaimType == "S" or ClaimType == "E":
                    break
                else:
                    print("Error claim type must be S or E ")


        # Calculations Start Here

            DailyAmount = 0
            MileageAmount = TotalKms * MILEAGE_RATE



            if RentOwnVal == "O":                            #Daily Amout Calculation
                DailyAmount = (NumDays * OWN_CAR_RATE) + MileageAmount
            elif RentOwnVal == "R":
                MileageAmount = 0
                DailyAmount = NumDays * RENT_CAR_RATE + MileageAmount

            PerdiemAmt = DailyAmount - MileageAmount


            Bonus = 0
            Bonus = BonusCalc(Bonus)                    #Bonus Calculation Using A Function

            if RentOwnVal == "R":                     # Coverting The Single Character To a whole word
                RentMSG = "Rented"
            else:
                RentMSG = "Ownned"

            if ClaimType == "S":
                ClaimMSG = "Standard"
            else:
                ClaimMSG = "Executive"

            HST = HST_RATE * (DailyAmount - MileageAmount)

            ClaimAmt = DailyAmount + Bonus
            TotalClaimAmt = ClaimAmt + HST
            print(HST,DailyAmount,MileageAmount,ClaimMSG,RentMSG,ClaimAmt,TotalClaimAmt,Bonus)
            print()
            print()


            print("The Employees First Name Is {:>}".format(EmpFirstName))
            print("The employees Last Name Is  {:>}".format(EmpLastName))
            print("The Trip Took Place In      {:>}".format(Location))
            print(f"The Trip Stated {DateConverter(StartDate):>}")
            print(f"The Trip Ended  {DateConverter(EndDate):>}")
            print("The Trip Was {:>} Days Long".format(NumDays))
            print("The Employee {:>} The Car ".format(RentMSG))
            print("The total kilometers travelled are {:>}".format(TotalKms))
            print("The claim type is                  {:>}".format(ClaimMSG))
            print()
            print(f"The per diem amount is  {FV.FDollar2(PerdiemAmt):>}")
            print(f"The mileage amount is   {FV.FDollar2(MileageAmount):>}")
            print(f"The Bonus is            {FV.FDollar2(BonusCalc(Bonus)):>}")
            print(f"The Claim Amount Is     {FV.FDollar2(ClaimAmt):>}")
            print(f"The Hst Is              {FV.FDollar2(HST):>}")
            print(f"The Claim Total Is      {FV.FDollar2(TotalClaimAmt):>}")
            print()
            Continue = input("Do you wish to continue? Y/N").upper()
            if Continue == "Y":
                continue
            else:
                break
    
    elif MenuChoice == 5:             #Menu Choice To Quit Program 
        break
        
        
        
    elif MenuChoice == 3:                      #Creating An Employee File Number 
        EmpFirstName = "Jordan"
        EmpLastName = "Kelloway"
        PhoneNum = "709-596-1234"
        EmpStartDate  = "2022-12-22"
        EmpBDay = "1999-09-09"
        EmpRefNum = (f"{EmpFirstName[0]}{EmpLastName[0]}{PhoneNum[10:12]}{EmpStartDate[5:7]}{EmpBDay[2:4]}")
        print(EmpRefNum)



    BackToMenu = input("Hit Any Key To Return To Menu:")
